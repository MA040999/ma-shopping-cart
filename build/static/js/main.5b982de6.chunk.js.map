{"version":3,"sources":["axiosConfig.js","components/ProductItem.js","components/Products.js","components/QuantityInput.js","components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["app","axios","create","baseURL","process","DOMAIN","withCredentials","ProductItem","props","useContext","SelectedProductsContext","selectedProducts","setSelectedProducts","product","className","onClick","pid","some","p","get","params","then","prevProducts","data","src","image","alt","name","style","width","price","qty","Products","searchedItem","updatedProducts","setUpdatedProducts","useState","products","setProducts","useEffect","isTrue","newProducts","length","updated","push","search","map","_id","QuantityInput","i","handleQtyChange","value","type","min","max","onChange","e","target","Cart","QuantitiesContext","quantities","setQuantities","total","setTotal","newValue","oldQty","newQty","Number","margin","String","splice","oldProducts","removeProduct","cursor","color","size","borderTop","JSON","stringify","React","createContext","App","setSearch","setSearchedItem","showProducts","setShowProducts","display","placeholder","onKeyDown","which","patch","res","post","console","log","Provider","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b982de6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// the baseURL should to point to localhost in development\r\n// and your domain in production\r\nconst app = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? process.env.DOMAIN\r\n      : \"http://localhost:4000/\",\r\n  withCredentials: true,\r\n});\r\n\r\nexport default app;\r\n","import app from \"../axiosConfig\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { SelectedProductsContext } from \"../App\";\r\n\r\nfunction ProductItem(props) {\r\n  const [selectedProducts, setSelectedProducts] = useContext(\r\n    SelectedProductsContext\r\n  );\r\n  const { product } = props;\r\n\r\n  let handleProductClick = (pid) => {\r\n    if (!selectedProducts.some((p) => p.pid === pid)) {\r\n      app\r\n        .get(\"/api/products/addCart\", {\r\n          params: {\r\n            pid: pid,\r\n          },\r\n        })\r\n        .then((product) => {\r\n          setSelectedProducts((prevProducts) => [\r\n            ...prevProducts,\r\n            product.data,\r\n          ]);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product shadow\">\r\n      <button className=\"item\" onClick={() => handleProductClick(product.pid)}>\r\n        <div className=\"parent\">\r\n          <img\r\n            className=\"pic\"\r\n            src={`/images/${product.image}`}\r\n            alt={product.name}\r\n          />\r\n        </div>\r\n        <table style={{ width: \"100%\" }}>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"price\">PKR {product.price}</td>\r\n              <td qty={product.pid} className=\"stock\">\r\n                Qty {product.qty}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"des\">{product.name}</div>\r\n      </button>\r\n      {/* <div>{JSON.stringify(selectedProducts, 2, null)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import app from \"../axiosConfig\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ProductItem from \"./ProductItem\";\r\n\r\nfunction Products(props) {\r\n  const { searchedItem, updatedProducts, setUpdatedProducts } = props;\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isTrue = false;\r\n    const newProducts = [];\r\n    if (updatedProducts.length !== 0) {\r\n      for (const product of products) {\r\n        for (const updated of updatedProducts) {\r\n          if (product.pid === updated.pid) {\r\n            isTrue = true;\r\n            newProducts.push(updated);\r\n          }\r\n        }\r\n        if (!isTrue) {\r\n          newProducts.push(product);\r\n        }\r\n        isTrue = false;\r\n      }\r\n      setProducts(newProducts);\r\n      setUpdatedProducts([]);\r\n    }\r\n  }, [updatedProducts, setUpdatedProducts, products]);\r\n\r\n  useEffect(() => {\r\n    if (searchedItem === \"\") {\r\n      app.get(\"/api/products/all\").then((products) => {\r\n        setProducts(products.data);\r\n      });\r\n    } else {\r\n      app\r\n        .get(`/api/products/search`, {\r\n          params: {\r\n            search: searchedItem,\r\n          },\r\n        })\r\n        .then((products) => {\r\n          setProducts(products.data);\r\n        });\r\n    }\r\n  }, [searchedItem]);\r\n  return (\r\n    <div>\r\n      {products.map((product) => (\r\n        <ProductItem key={product._id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\n\r\nfunction QuantityInput(props) {\r\n  const { product, i, handleQtyChange, value } = props;\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        value={value}\r\n        min={1}\r\n        max={product.qty}\r\n        onChange={(e) => handleQtyChange(e.target.value, i)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuantityInput;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { SelectedProductsContext, QuantitiesContext } from \"../App\";\r\n\r\nimport QuantityItem from \"./QuantityInput\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nfunction Cart() {\r\n  const [selectedProducts, setSelectedProducts] = useContext(\r\n    SelectedProductsContext\r\n  );\r\n  const [quantities, setQuantities] = useContext(QuantitiesContext);\r\n\r\n  const [total, setTotal] = useState(0);\r\n\r\n  let handleQtyChange = (newValue, i) => {\r\n    setQuantities((oldQty) => {\r\n      const newQty = [...oldQty];\r\n      newQty[i] = Number(newValue);\r\n      return newQty;\r\n    });\r\n  };\r\n\r\n  let removeProduct = (i) => {\r\n    setQuantities((oldQty) => {\r\n      const newQty = [...oldQty];\r\n      newQty.splice(i, 1);\r\n\r\n      return newQty;\r\n    });\r\n    setSelectedProducts((oldProducts) => {\r\n      const newProducts = [...oldProducts];\r\n      newProducts.splice(i, 1);\r\n\r\n      return newProducts;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    quantities.map((qty, i) => {\r\n      total = total + Number(selectedProducts[i].price * qty);\r\n      return null;\r\n    });\r\n\r\n    setTotal(total);\r\n  }, [quantities, selectedProducts]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProducts.length !== quantities.length) {\r\n      setQuantities((oldQty) => {\r\n        const newQty = [...oldQty];\r\n        newQty.push(1);\r\n        return newQty;\r\n      });\r\n    }\r\n  }, [selectedProducts, setQuantities, quantities.length]);\r\n  return (\r\n    <div>\r\n      <table style={{ width: \"540px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Sno</th>\r\n            <th style={{ width: \"70px\" }}>Product</th>\r\n            <th style={{ width: \"200px\" }}>Name</th>\r\n            <th>Price</th>\r\n            <th>Qty</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"cart\">\r\n          {selectedProducts.map((product, i) => (\r\n            <tr key={product._id}>\r\n              <td>{i + 1}</td>\r\n              <td>\r\n                <img\r\n                  src={`/images/${product.image}`}\r\n                  width=\"75\"\r\n                  style={{ margin: \"auto\" }}\r\n                  alt={product.name}\r\n                />\r\n              </td>\r\n\r\n              <td>{product.name}</td>\r\n              <td>{product.price}</td>\r\n\r\n              <td>\r\n                <QuantityItem\r\n                  product={product}\r\n                  i={i}\r\n                  value={quantities[i] || 1}\r\n                  handleQtyChange={handleQtyChange}\r\n                />\r\n              </td>\r\n              <td>{String(quantities[i] * product.price)}</td>\r\n              <td>\r\n                <MdDelete\r\n                  onClick={() => {\r\n                    removeProduct(i);\r\n                  }}\r\n                  style={{ cursor: \"pointer\", color: \"red\" }}\r\n                  size={28}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr style={{ borderTop: \"2px solid #585858\" }}>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className=\"totalAll\">{total}</td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n      <div>\r\n        <pre>{JSON.stringify(quantities, null, 2)}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Products from \"./components/Products\";\nimport Cart from \"./components/Cart\";\nimport app from \"./axiosConfig\";\n\nexport const SelectedProductsContext = React.createContext([[], () => []]);\nexport const QuantitiesContext = React.createContext([[], () => []]);\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [searchedItem, setSearchedItem] = useState(\"\");\n  const [showProducts, setShowProducts] = useState(false);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [quantities, setQuantities] = useState([]);\n  const [updatedProducts, setUpdatedProducts] = useState([]);\n\n  let handleSearch = (e) => {\n    if (e.which === 13) {\n      setSearchedItem(search);\n      setShowProducts(true);\n    }\n  };\n\n  let handleCheckOut = () => {\n    if (selectedProducts.length > 0) {\n      app\n        .patch(\"/api/products/updateQ\", {\n          selectedProducts: selectedProducts,\n          quantities: quantities,\n        })\n        .then((res) => {\n          setUpdatedProducts(res.data);\n          app\n            .post(\"/api/orders/add\", {\n              selectedProducts: selectedProducts,\n              quantities: quantities,\n            })\n            .then((res) => {\n              console.log(\"res :>> \", res);\n              setSelectedProducts([]);\n              setQuantities([]);\n            });\n        });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"logo\">CHASE UP</h2>\n      <div style={{ display: \"flex\" }}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Search Products\"\n          name=\"searchInput\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handleSearch}\n        />\n        <div className=\"button-control\">\n          <button className=\"order-btn\" onClick={handleCheckOut}>\n            Check Out\n          </button>\n        </div>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <div className=\"content\">\n          {showProducts ? (\n            <SelectedProductsContext.Provider\n              value={[selectedProducts, setSelectedProducts]}\n            >\n              <Products\n                searchedItem={searchedItem}\n                updatedProducts={updatedProducts}\n                setUpdatedProducts={setUpdatedProducts}\n              />\n            </SelectedProductsContext.Provider>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div id=\"bill\" className=\"bill\">\n          {selectedProducts.length === 0 ? (\n            \"\"\n          ) : (\n            <SelectedProductsContext.Provider\n              value={[selectedProducts, setSelectedProducts]}\n            >\n              <QuantitiesContext.Provider value={[quantities, setQuantities]}>\n                <Cart />\n              </QuantitiesContext.Provider>\n            </SelectedProductsContext.Provider>\n          )}\n        </div>\n      </div>\n\n      {/* <div>\n        <pre>{JSON.stringify(updatedProducts, null, 2)}</pre>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}